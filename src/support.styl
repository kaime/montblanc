// @todo this is temporary
-regexp-version = '^[0-9]+(\.[0-9]+)?$'

// Browser support
no-support = false

browsers = json('support/browsers.json', { hash: true })

supported-browsers = {
  'ie':                 8,
  'firefox':            20,
  'chrome':             12,
  'safari':             5,
  'opera':              12,
  'opera-mini':         no-support,
  'opera-mobile':       no-support,
  'android-chrome':     no-support,
  'android-browser':    no-support,
  'android-firefox':    no-support,
  'ios-safari':         no-support,
  'blackberry-browser': no-support,
  'ie-mobile':          no-support
}

support()
  for arg in arguments
    arg = cast(arg, 'string')

    vendor = null
    version = null

    for a in split(' ', arg)
      if a in browsers
        vendor = a
      else if match(-regexp-version, a)
        version = cast(a, 'unit')
      else if a is not '>='
        // Only this operator is supported right now
        error('bad args')

    supported-browsers[vendor] = version

unsupport()
  for vendor in arguments
    arg = cast(arg, 'string')

    if vendor in browsers
      supported-browsers[vendor] = no-support

support-none()
  for vendor in supported-browsers
    supported-browsers[vendor] = no-support

/**
 * Checks the corresponding `support-for-{vendor}` variables.
 */
has-support()
  for arg in arguments
    arg = cast(arg, 'string')

    vendor = null
    version = null
    cmp = null

    for a in split(' ', arg)
      if a in browsers
        vendor = a
      else if match(-regexp-version, a)
        version = cast(a, 'unit')
      else if a in ('<' '<=' '>' '>=')
        cmp = a
      else
        error('bad args')

    if vendor == null
      error('bad args')

    if cmp != null and version == null
      error('bad args')

    supported = supported-browsers[vendor]

    if version is null
      if supported != no-support
        return true
    else if supported is not no-support
      if cmp is '>'
        if supported > version
          return true
      else if cmp is '>='
        if supported >= version
          return true
      else if cmp is '<'
        if supported < version
          return true
      else
        if supported <= version
          return true

  return false

support-for(vendor)
  vendor = cast(vendor, 'string')

  if vendor in browsers
    return supported-browsers[vendor]