// Browser support
no-support = false

browsers = json('support/browsers.json', { hash: true })

default-support = {
  'ie':                 '8',
  'firefox':            '10',
  'chrome':             '12',
  'safari':             '5',
  'opera':              '12',
  'opera-mini':         no-support,
  'opera-mobile':       no-support,
  'android-chrome':     no-support,
  'android-browser':    no-support,
  'android-firefox':    no-support,
  'ios-safari':         no-support,
  'blackberry-browser': no-support,
  'ie-mobile':          no-support
}

for vendor, version in browsers
  v = 'support-for-' + vendor
  c = lookup(v)

  if c is a 'unit'
    if c < version[0]
      error() // Cannot set a version lower than minimum
  else if c is not no-support
    define(v, default-support[vendor]) // Set default version
  else
    error()

/**
 * Checks the corresponding `support-for-{vendor}` variables.
 */
has-support()
  for arg in arguments
    arg = split(' ', '%s' % unquote(arg))

    vendor = null
    version = null
    cmp = null

    for a in arg
      if a in browsers
        vendor = a
      else if match('^[0-9]+(\.[0-9]+)?$', a)
        version = a
      else if a in ('<' '<=' '>' '>=')
        cmp = a
      else
        error('bad args')

    if vendor is null
      error('bad args')

    if cmp is not null and version is null
      error('bad args')

    s = lookup('support-for-' + vendor)

    if version is null
      return true if s is not no-support
    else if s is not no-support
      if cmp is '>'
        return true if s > version
      else if cmp is '>='
        return true if s >= version
      else if cmp is '<'
        return true if s < version
      else
        return true if s <= version

  return false